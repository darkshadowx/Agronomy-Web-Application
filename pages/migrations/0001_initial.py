# Generated by Django 4.1.10 on 2023-08-18 09:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import managements.models
import pages.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('image', models.ImageField(default=managements.models.get_default_img_filepath, max_length=255, upload_to=pages.models.get_answer_img_filepath, verbose_name='Image')),
                ('description', models.CharField(max_length=7650, verbose_name='Description')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='Accepted')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_answers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Answers',
            },
        ),
        migrations.CreateModel(
            name='AnswerCounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('votes_count', models.IntegerField(default=0, verbose_name='Votes count')),
                ('answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer_counts', to='pages.answer')),
            ],
            options={
                'verbose_name_plural': 'Answer Counts',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('tags', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tags')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_problems', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Problems',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('image', models.ImageField(default=managements.models.get_default_img_filepath, max_length=255, upload_to=pages.models.get_question_img_filepath, verbose_name='Image')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.CharField(max_length=7650, verbose_name='Description')),
                ('tags', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tags')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='QuestionCounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('votes_count', models.IntegerField(default=0, verbose_name='Votes count')),
                ('views_count', models.IntegerField(default=0, verbose_name='Views count')),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='question_counts', to='pages.question')),
            ],
            options={
                'verbose_name_plural': 'Question Counts',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('upvote', models.BooleanField(default=False, verbose_name='Upvote')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('answer_vote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer_votes', to='pages.answercounts', verbose_name='Answer Vote')),
                ('question_vote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question_votes', to='pages.questioncounts', verbose_name='Question Vote')),
            ],
            options={
                'verbose_name_plural': 'Votes',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('ai', models.BooleanField(default=False, verbose_name='AI')),
                ('assigned', models.BooleanField(default=False, verbose_name='Assigned')),
                ('expert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expert_rooms', to=settings.AUTH_USER_MODEL)),
                ('problem', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='room', to='pages.problem')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_rooms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Rooms',
            },
        ),
        migrations.AddField(
            model_name='questioncounts',
            name='voted_by',
            field=models.ManyToManyField(blank=True, related_name='question_voted_content', through='pages.Vote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Send Time')),
                ('image', models.ImageField(default=managements.models.get_default_img_filepath, max_length=255, upload_to=pages.models.get_message_img_filepath, verbose_name='Image')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_messages', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_messages', to='pages.room')),
            ],
            options={
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.AddField(
            model_name='answercounts',
            name='voted_by',
            field=models.ManyToManyField(blank=True, related_name='answer_voted_content', through='pages.Vote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='pages.question'),
        ),
    ]
